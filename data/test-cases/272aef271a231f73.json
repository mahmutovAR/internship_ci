{"uid":"272aef271a231f73","name":"Авторизация на странице Login Page","fullName":"tests.test_failure_screenshot#test_log_in","historyId":"c9e2e4e4cff0d91490435764ea9c6011","time":{"start":1744979613123,"stop":1744979630132,"duration":17009},"description":"\n    Цель: Проверить обработку упавших тестов\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть страницу с формой\n        2. Ввести данные в поле \"Username\"\n        3. Ввести данные в поле \"Password\"\n        4. Ввести данные в поле \"Username *\"\n        5. Кликнуть кнопку \"Login\"\n        6. Проверить, что отображается сообщение об успешной авторизации\n\n    Ожидаемый результат:\n        - Авторизация прошла успешно\n        - Отображается сообщение об успешной авторизации","descriptionHtml":"<pre><code>Цель: Проверить обработку упавших тестов\n\nПредусловие:\n    - Открыть браузер\n\nШаги:\n    1. Открыть страницу с формой\n    2. Ввести данные в поле &quot;Username&quot;\n    3. Ввести данные в поле &quot;Password&quot;\n    4. Ввести данные в поле &quot;Username *&quot;\n    5. Кликнуть кнопку &quot;Login&quot;\n    6. Проверить, что отображается сообщение об успешной авторизации\n\nОжидаемый результат:\n    - Авторизация прошла успешно\n    - Отображается сообщение об успешной авторизации\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nAttributeError: 'NoneType' object has no attribute 'text'","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"19e1a65f1d21461c23c6121950a19e0e\")>\nusername = 'invalid username', password = 'invalid password'\nusername_desc = 'username-C'\n\n    @allure.severity(severity_level.MINOR)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Скриншот упавшего теста\")\n    @allure.testcase(\"Задачи U1, U2, U4\")\n    @allure.story(\"При падении теста делается скриншот\")\n    @allure.title(\"Авторизация на странице Login Page\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверить обработку упавших тестов\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть страницу с формой\n            2. Ввести данные в поле \"Username\"\n            3. Ввести данные в поле \"Password\"\n            4. Ввести данные в поле \"Username *\"\n            5. Кликнуть кнопку \"Login\"\n            6. Проверить, что отображается сообщение об успешной авторизации\n    \n        Ожидаемый результат:\n            - Авторизация прошла успешно\n            - Отображается сообщение об успешной авторизации\"\"\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('username, password, username_desc', [('invalid username', 'invalid password', 'username-C')])\n    def test_log_in(browser: fixture, username: str, password: str, username_desc: str):\n        login_page = LoginPage(browser)\n        login_page.open_login_page()\n        login_page.fill_username(username)\n        login_page.fill_password(password)\n        login_page.fill_username_desc(username_desc)\n        login_page.click_login_button()\n>       login_page.assert_auth_success()\n\ntests/test_failure_screenshot.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:92: in assert_auth_success\n    auth_message = self.get_element_text(LoginLocators.auth_success)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.login_page.LoginPage object at 0x7fb92dc9dbe0>\nlocator = ('xpath', '//p[contains(string(), \"You\\'re logged in!!\")]')\n\n    def get_element_text(self, locator: tuple[str, str]) -> str:\n        \"\"\"Returns specified page element text.\"\"\"\n>       return self.get_element_by_locator(locator).text\nE       AttributeError: 'NoneType' object has no attribute 'text'\n\npages/base_page.py:39: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744979611736,"stop":1744979611963,"duration":227},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1744979611963,"stop":1744979613121,"duration":1158},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Цель: Проверить обработку упавших тестов\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть страницу с формой\n        2. Ввести данные в поле \"Username\"\n        3. Ввести данные в поле \"Password\"\n        4. Ввести данные в поле \"Username *\"\n        5. Кликнуть кнопку \"Login\"\n        6. Проверить, что отображается сообщение об успешной авторизации\n\n    Ожидаемый результат:\n        - Авторизация прошла успешно\n        - Отображается сообщение об успешной авторизации","status":"skipped","statusMessage":"XFAIL\n\nAttributeError: 'NoneType' object has no attribute 'text'","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"19e1a65f1d21461c23c6121950a19e0e\")>\nusername = 'invalid username', password = 'invalid password'\nusername_desc = 'username-C'\n\n    @allure.severity(severity_level.MINOR)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Скриншот упавшего теста\")\n    @allure.testcase(\"Задачи U1, U2, U4\")\n    @allure.story(\"При падении теста делается скриншот\")\n    @allure.title(\"Авторизация на странице Login Page\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверить обработку упавших тестов\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть страницу с формой\n            2. Ввести данные в поле \"Username\"\n            3. Ввести данные в поле \"Password\"\n            4. Ввести данные в поле \"Username *\"\n            5. Кликнуть кнопку \"Login\"\n            6. Проверить, что отображается сообщение об успешной авторизации\n    \n        Ожидаемый результат:\n            - Авторизация прошла успешно\n            - Отображается сообщение об успешной авторизации\"\"\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('username, password, username_desc', [('invalid username', 'invalid password', 'username-C')])\n    def test_log_in(browser: fixture, username: str, password: str, username_desc: str):\n        login_page = LoginPage(browser)\n        login_page.open_login_page()\n        login_page.fill_username(username)\n        login_page.fill_password(password)\n        login_page.fill_username_desc(username_desc)\n        login_page.click_login_button()\n>       login_page.assert_auth_success()\n\ntests/test_failure_screenshot.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:92: in assert_auth_success\n    auth_message = self.get_element_text(LoginLocators.auth_success)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.login_page.LoginPage object at 0x7fb92dc9dbe0>\nlocator = ('xpath', '//p[contains(string(), \"You\\'re logged in!!\")]')\n\n    def get_element_text(self, locator: tuple[str, str]) -> str:\n        \"\"\"Returns specified page element text.\"\"\"\n>       return self.get_element_by_locator(locator).text\nE       AttributeError: 'NoneType' object has no attribute 'text'\n\npages/base_page.py:39: AttributeError","steps":[{"name":"Открыть страницу с формой","time":{"start":1744979613123,"stop":1744979617626,"duration":4503},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Ввести данные в поле \"Username\"","time":{"start":1744979617626,"stop":1744979619801,"duration":2175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Ввести данные в поле \"Password\"","time":{"start":1744979619802,"stop":1744979619888,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Ввести данные в поле \"Username *\"","time":{"start":1744979619888,"stop":1744979619939,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Кликнуть кнопку \"Login\"","time":{"start":1744979619939,"stop":1744979620000,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверить, что отображается сообщение об успешной авторизации","time":{"start":1744979620000,"stop":1744979630131,"duration":10131},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'text'\n","statusTrace":"  File \"/ui_tests/pages/login_page.py\", line 92, in assert_auth_success\n    auth_message = self.get_element_text(LoginLocators.auth_success)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ui_tests/pages/base_page.py\", line 39, in get_element_text\n    return self.get_element_by_locator(locator).text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1744979630189,"stop":1744979630241,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"При падении теста делается скриншот"},{"name":"severity","value":"minor"},{"name":"feature","value":"Скриншот упавшего теста"},{"name":"epic","value":"Smoke тест"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_failure_screenshot"},{"name":"host","value":"e06ed94265e2"},{"name":"thread","value":"17-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_failure_screenshot"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'invalid password'"},{"name":"username","value":"'invalid username'"},{"name":"username_desc","value":"'username-C'"}],"links":[{"name":"Задачи U1, U2, U4","url":"Задачи U1, U2, U4","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"272aef271a231f73.json","parameterValues":["'invalid password'","'invalid username'","'username-C'"]}