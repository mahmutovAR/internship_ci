{"uid":"6e4dfd95c9d17b2b","name":"Загрузка блока с курсами","fullName":"tests.test_home_page#test_popular_courses_slider","historyId":"52ddaa0e64fdfa3576ad82d2afcc0fd6","time":{"start":1744965326980,"stop":1744965330879,"duration":3899},"description":"\n    Цель: Проверка блока с курсами\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть домашнюю страницу\n        2. Прокрутить страницу до слайдов\n        3. Нажать кнопку навигации \"Назад\"\n        4. Проверить, что положение слайда изменилось\n        5. Нажать кнопку навигации \"Вперед\"\n        6. Проверить, что положение слайда изменилось\n\n    Ожидаемый результат:\n        - Положение слайда изменилось после нажатия кнопок навигации","descriptionHtml":"<pre><code>Цель: Проверка блока с курсами\n\nПредусловие:\n    - Открыть браузер\n\nШаги:\n    1. Открыть домашнюю страницу\n    2. Прокрутить страницу до слайдов\n    3. Нажать кнопку навигации &quot;Назад&quot;\n    4. Проверить, что положение слайда изменилось\n    5. Нажать кнопку навигации &quot;Вперед&quot;\n    6. Проверить, что положение слайда изменилось\n\nОжидаемый результат:\n    - Положение слайда изменилось после нажатия кнопок навигации\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (12, 1341)\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x5632e560d0ca <unknown>\n#1 0x5632e52d92b0 <unknown>\n#2 0x5632e532f7e6 <unknown>\n#3 0x5632e532d6ed <unknown>\n#4 0x5632e532b187 <unknown>\n#5 0x5632e532a02c <unknown>\n#6 0x5632e531d946 <unknown>\n#7 0x5632e534d902 <unknown>\n#8 0x5632e531d2f9 <unknown>\n#9 0x5632e534dace <unknown>\n#10 0x5632e536be26 <unknown>\n#11 0x5632e534d6a3 <unknown>\n#12 0x5632e531b4f3 <unknown>\n#13 0x5632e531c4fe <unknown>\n#14 0x5632e55d3d7b <unknown>\n#15 0x5632e55d7d31 <unknown>\n#16 0x5632e55bfc85 <unknown>\n#17 0x5632e55d88a2 <unknown>\n#18 0x5632e55a4e1f <unknown>\n#19 0x5632e55fbe48 <unknown>\n#20 0x5632e55fc013 <unknown>\n#21 0x5632e560bebc <unknown>\n#22 0x7f9ae4819ac3 <unknown>","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"638bccecbf4075dd8a0370386f57491e\")>\n\n    @allure.severity(severity_level.MINOR)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Загрузка элемента страницы\")\n    @allure.testcase(\"Задачи U1, U2\")\n    @allure.story(\"Элемент загружается успешно\")\n    @allure.title(\"Загрузка блока с курсами\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверка блока с курсами\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть домашнюю страницу\n            2. Прокрутить страницу до слайдов\n            3. Нажать кнопку навигации \"Назад\"\n            4. Проверить, что положение слайда изменилось\n            5. Нажать кнопку навигации \"Вперед\"\n            6. Проверить, что положение слайда изменилось\n    \n        Ожидаемый результат:\n            - Положение слайда изменилось после нажатия кнопок навигации\"\"\")\n    @pytest.mark.xfail\n    def test_popular_courses_slider(browser: fixture):\n        slider = PopularCourses(browser)\n        slider.open_homepage()\n        slider.scroll_to_slider()\n        ini_location = slider.get_slide_location()\n>       slider.click_previous_button()\n\ntests/test_home_page.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:157: in click_previous_button\n    self.click_element(PopularCoursesLocators.prev_slide)\npages/base_page.py:67: in click_element\n    self.get_clickable_element(locator).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d0bf0ae40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5632e55fc013 \\\\u003Cunknown>\\\\n#21 0x5632e560bebc \\\\u003Cunknown>\\\\n#22 0x7f9ae4819ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (12, 1341)\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x5632e560d0ca <unknown>\nE       #1 0x5632e52d92b0 <unknown>\nE       #2 0x5632e532f7e6 <unknown>\nE       #3 0x5632e532d6ed <unknown>\nE       #4 0x5632e532b187 <unknown>\nE       #5 0x5632e532a02c <unknown>\nE       #6 0x5632e531d946 <unknown>\nE       #7 0x5632e534d902 <unknown>\nE       #8 0x5632e531d2f9 <unknown>\nE       #9 0x5632e534dace <unknown>\nE       #10 0x5632e536be26 <unknown>\nE       #11 0x5632e534d6a3 <unknown>\nE       #12 0x5632e531b4f3 <unknown>\nE       #13 0x5632e531c4fe <unknown>\nE       #14 0x5632e55d3d7b <unknown>\nE       #15 0x5632e55d7d31 <unknown>\nE       #16 0x5632e55bfc85 <unknown>\nE       #17 0x5632e55d88a2 <unknown>\nE       #18 0x5632e55a4e1f <unknown>\nE       #19 0x5632e55fbe48 <unknown>\nE       #20 0x5632e55fc013 <unknown>\nE       #21 0x5632e560bebc <unknown>\nE       #22 0x7f9ae4819ac3 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1744965326103,"stop":1744965326979,"duration":876},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Цель: Проверка блока с курсами\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть домашнюю страницу\n        2. Прокрутить страницу до слайдов\n        3. Нажать кнопку навигации \"Назад\"\n        4. Проверить, что положение слайда изменилось\n        5. Нажать кнопку навигации \"Вперед\"\n        6. Проверить, что положение слайда изменилось\n\n    Ожидаемый результат:\n        - Положение слайда изменилось после нажатия кнопок навигации","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (12, 1341)\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x5632e560d0ca <unknown>\n#1 0x5632e52d92b0 <unknown>\n#2 0x5632e532f7e6 <unknown>\n#3 0x5632e532d6ed <unknown>\n#4 0x5632e532b187 <unknown>\n#5 0x5632e532a02c <unknown>\n#6 0x5632e531d946 <unknown>\n#7 0x5632e534d902 <unknown>\n#8 0x5632e531d2f9 <unknown>\n#9 0x5632e534dace <unknown>\n#10 0x5632e536be26 <unknown>\n#11 0x5632e534d6a3 <unknown>\n#12 0x5632e531b4f3 <unknown>\n#13 0x5632e531c4fe <unknown>\n#14 0x5632e55d3d7b <unknown>\n#15 0x5632e55d7d31 <unknown>\n#16 0x5632e55bfc85 <unknown>\n#17 0x5632e55d88a2 <unknown>\n#18 0x5632e55a4e1f <unknown>\n#19 0x5632e55fbe48 <unknown>\n#20 0x5632e55fc013 <unknown>\n#21 0x5632e560bebc <unknown>\n#22 0x7f9ae4819ac3 <unknown>","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"638bccecbf4075dd8a0370386f57491e\")>\n\n    @allure.severity(severity_level.MINOR)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Загрузка элемента страницы\")\n    @allure.testcase(\"Задачи U1, U2\")\n    @allure.story(\"Элемент загружается успешно\")\n    @allure.title(\"Загрузка блока с курсами\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверка блока с курсами\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть домашнюю страницу\n            2. Прокрутить страницу до слайдов\n            3. Нажать кнопку навигации \"Назад\"\n            4. Проверить, что положение слайда изменилось\n            5. Нажать кнопку навигации \"Вперед\"\n            6. Проверить, что положение слайда изменилось\n    \n        Ожидаемый результат:\n            - Положение слайда изменилось после нажатия кнопок навигации\"\"\")\n    @pytest.mark.xfail\n    def test_popular_courses_slider(browser: fixture):\n        slider = PopularCourses(browser)\n        slider.open_homepage()\n        slider.scroll_to_slider()\n        ini_location = slider.get_slide_location()\n>       slider.click_previous_button()\n\ntests/test_home_page.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:157: in click_previous_button\n    self.click_element(PopularCoursesLocators.prev_slide)\npages/base_page.py:67: in click_element\n    self.get_clickable_element(locator).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d0bf0ae40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5632e55fc013 \\\\u003Cunknown>\\\\n#21 0x5632e560bebc \\\\u003Cunknown>\\\\n#22 0x7f9ae4819ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (12, 1341)\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x5632e560d0ca <unknown>\nE       #1 0x5632e52d92b0 <unknown>\nE       #2 0x5632e532f7e6 <unknown>\nE       #3 0x5632e532d6ed <unknown>\nE       #4 0x5632e532b187 <unknown>\nE       #5 0x5632e532a02c <unknown>\nE       #6 0x5632e531d946 <unknown>\nE       #7 0x5632e534d902 <unknown>\nE       #8 0x5632e531d2f9 <unknown>\nE       #9 0x5632e534dace <unknown>\nE       #10 0x5632e536be26 <unknown>\nE       #11 0x5632e534d6a3 <unknown>\nE       #12 0x5632e531b4f3 <unknown>\nE       #13 0x5632e531c4fe <unknown>\nE       #14 0x5632e55d3d7b <unknown>\nE       #15 0x5632e55d7d31 <unknown>\nE       #16 0x5632e55bfc85 <unknown>\nE       #17 0x5632e55d88a2 <unknown>\nE       #18 0x5632e55a4e1f <unknown>\nE       #19 0x5632e55fbe48 <unknown>\nE       #20 0x5632e55fc013 <unknown>\nE       #21 0x5632e560bebc <unknown>\nE       #22 0x7f9ae4819ac3 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Открыть домашнюю страницу","time":{"start":1744965326980,"stop":1744965329042,"duration":2062},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Прокрутить страницу до слайдов","time":{"start":1744965329042,"stop":1744965329500,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку навигации \"Назад\"","time":{"start":1744965329570,"stop":1744965330877,"duration":1307},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (12, 1341)\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x5632e560d0ca <unknown>\n#1 0x5632e52d92b0 <unknown>\n#2 0x5632e532f7e6 <unknown>\n#3 0x5632e532d6ed <unknown>\n#4 0x5632e532b187 <unknown>\n#5 0x5632e532a02c <unknown>\n#6 0x5632e531d946 <unknown>\n#7 0x5632e534d902 <unknown>\n#8 0x5632e531d2f9 <unknown>\n#9 0x5632e534dace <unknown>\n#10 0x5632e536be26 <unknown>\n#11 0x5632e534d6a3 <unknown>\n#12 0x5632e531b4f3 <unknown>\n#13 0x5632e531c4fe <unknown>\n#14 0x5632e55d3d7b <unknown>\n#15 0x5632e55d7d31 <unknown>\n#16 0x5632e55bfc85 <unknown>\n#17 0x5632e55d88a2 <unknown>\n#18 0x5632e55a4e1f <unknown>\n#19 0x5632e55fbe48 <unknown>\n#20 0x5632e55fc013 <unknown>\n#21 0x5632e560bebc <unknown>\n#22 0x7f9ae4819ac3 <unknown>\n\n","statusTrace":"  File \"/ui_tests/pages/home_page.py\", line 157, in click_previous_button\n    self.click_element(PopularCoursesLocators.prev_slide)\n  File \"/ui_tests/pages/base_page.py\", line 67, in click_element\n    self.get_clickable_element(locator).click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1744965330999,"stop":1744965331101,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Smoke тест"},{"name":"feature","value":"Загрузка элемента страницы"},{"name":"story","value":"Элемент загружается успешно"},{"name":"severity","value":"minor"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_home_page"},{"name":"host","value":"62e8e55bf2c3"},{"name":"thread","value":"28-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_home_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Задачи U1, U2","url":"Задачи U1, U2","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"6e4dfd95c9d17b2b.json","parameterValues":[]}