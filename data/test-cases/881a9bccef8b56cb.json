{"uid":"881a9bccef8b56cb","name":"Переход по меню на другие страницы","fullName":"tests.test_menu_redirect#test_redirect_to_video_tutorial_spring","historyId":"11e27ca5a79f34da04a1cf8de79eb8e9","time":{"start":1744979634299,"stop":1744979937771,"duration":303472},"description":"\n    Цель: Проверка перехода по меню на другие страницы\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть домашнюю страницу\n        2. Навести курсор на вкладку меню \"Video Tutorial\"\n        3. Кликнуть пункт \"Spring Boot\"\n        4. Проверить переход на страницу\n        5. Проверить значение \"TITLE\"\n        6. Проверить корректность отображения элементов страницы\n\n    Ожидаемый результат:\n        - Происходит переход на страницу\n        - Значение \"TITLE\" соответствует странице\n        - Элементы, уникальные для этой страницы, активны","descriptionHtml":"<pre><code>Цель: Проверка перехода по меню на другие страницы\n\nПредусловие:\n    - Открыть браузер\n\nШаги:\n    1. Открыть домашнюю страницу\n    2. Навести курсор на вкладку меню &quot;Video Tutorial&quot;\n    3. Кликнуть пункт &quot;Spring Boot&quot;\n    4. Проверить переход на страницу\n    5. Проверить значение &quot;TITLE&quot;\n    6. Проверить корректность отображения элементов страницы\n\nОжидаемый результат:\n    - Происходит переход на страницу\n    - Значение &quot;TITLE&quot; соответствует странице\n    - Элементы, уникальные для этой страницы, активны\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x55e99cbac0ca <unknown>\n#1 0x55e99c8782b0 <unknown>\n#2 0x55e99c860380 <unknown>\n#3 0x55e99c86006d <unknown>\n#4 0x55e99c85e078 <unknown>\n#5 0x55e99c85e87f <unknown>\n#6 0x55e99c86e29b <unknown>\n#7 0x55e99c884674 <unknown>\n#8 0x55e99c889bab <unknown>\n#9 0x55e99c85ef8e <unknown>\n#10 0x55e99c8844cf <unknown>\n#11 0x55e99c90b08b <unknown>\n#12 0x55e99c8ec6a3 <unknown>\n#13 0x55e99c8ba4f3 <unknown>\n#14 0x55e99c8bb4fe <unknown>\n#15 0x55e99cb72d7b <unknown>\n#16 0x55e99cb76d31 <unknown>\n#17 0x55e99cb5ec85 <unknown>\n#18 0x55e99cb778a2 <unknown>\n#19 0x55e99cb43e1f <unknown>\n#20 0x55e99cb9ae48 <unknown>\n#21 0x55e99cb9b013 <unknown>\n#22 0x55e99cbaaebc <unknown>\n#23 0x7f37143acac3 <unknown>","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"5549ba2e2d16e4767e2d4372708b4b5d\")>\n\n    @allure.severity(severity_level.NORMAL)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Переход на страницу по ссылке\")\n    @allure.testcase(\"Задача U1, U2\")\n    @allure.story(\"Переход по ссылке проходит успешно, основные элементы новой страницы отображаются корректно\")\n    @allure.title(\"Переход по меню на другие страницы\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверка перехода по меню на другие страницы\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть домашнюю страницу\n            2. Навести курсор на вкладку меню \"Video Tutorial\"\n            3. Кликнуть пункт \"Spring Boot\"\n            4. Проверить переход на страницу\n            5. Проверить значение \"TITLE\"\n            6. Проверить корректность отображения элементов страницы\n    \n        Ожидаемый результат:\n            - Происходит переход на страницу\n            - Значение \"TITLE\" соответствует странице\n            - Элементы, уникальные для этой страницы, активны\"\"\")\n    @pytest.mark.xfail\n    def test_redirect_to_video_tutorial_spring(browser: fixture):\n        menu = Menu(browser)\n        menu.open_homepage()\n>       menu.hover_over_video_tutorial()\n\ntests/test_menu_redirect.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:84: in hover_over_video_tutorial\n    self.hover_over_element(MenuLocators.video_tutorial)\npages/base_page.py:82: in hover_over_element\n    actions.move_to_element(element).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd275d7a240>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55e99cb9b013 \\\\u003Cunknown>\\\\n#22 0x55e99cbaaebc \\\\u003Cunknown>\\\\n#23 0x7f37143acac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x55e99cbac0ca <unknown>\nE       #1 0x55e99c8782b0 <unknown>\nE       #2 0x55e99c860380 <unknown>\nE       #3 0x55e99c86006d <unknown>\nE       #4 0x55e99c85e078 <unknown>\nE       #5 0x55e99c85e87f <unknown>\nE       #6 0x55e99c86e29b <unknown>\nE       #7 0x55e99c884674 <unknown>\nE       #8 0x55e99c889bab <unknown>\nE       #9 0x55e99c85ef8e <unknown>\nE       #10 0x55e99c8844cf <unknown>\nE       #11 0x55e99c90b08b <unknown>\nE       #12 0x55e99c8ec6a3 <unknown>\nE       #13 0x55e99c8ba4f3 <unknown>\nE       #14 0x55e99c8bb4fe <unknown>\nE       #15 0x55e99cb72d7b <unknown>\nE       #16 0x55e99cb76d31 <unknown>\nE       #17 0x55e99cb5ec85 <unknown>\nE       #18 0x55e99cb778a2 <unknown>\nE       #19 0x55e99cb43e1f <unknown>\nE       #20 0x55e99cb9ae48 <unknown>\nE       #21 0x55e99cb9b013 <unknown>\nE       #22 0x55e99cbaaebc <unknown>\nE       #23 0x7f37143acac3 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744979611737,"stop":1744979611936,"duration":199},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1744979633579,"stop":1744979634298,"duration":719},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Цель: Проверка перехода по меню на другие страницы\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть домашнюю страницу\n        2. Навести курсор на вкладку меню \"Video Tutorial\"\n        3. Кликнуть пункт \"Spring Boot\"\n        4. Проверить переход на страницу\n        5. Проверить значение \"TITLE\"\n        6. Проверить корректность отображения элементов страницы\n\n    Ожидаемый результат:\n        - Происходит переход на страницу\n        - Значение \"TITLE\" соответствует странице\n        - Элементы, уникальные для этой страницы, активны","status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x55e99cbac0ca <unknown>\n#1 0x55e99c8782b0 <unknown>\n#2 0x55e99c860380 <unknown>\n#3 0x55e99c86006d <unknown>\n#4 0x55e99c85e078 <unknown>\n#5 0x55e99c85e87f <unknown>\n#6 0x55e99c86e29b <unknown>\n#7 0x55e99c884674 <unknown>\n#8 0x55e99c889bab <unknown>\n#9 0x55e99c85ef8e <unknown>\n#10 0x55e99c8844cf <unknown>\n#11 0x55e99c90b08b <unknown>\n#12 0x55e99c8ec6a3 <unknown>\n#13 0x55e99c8ba4f3 <unknown>\n#14 0x55e99c8bb4fe <unknown>\n#15 0x55e99cb72d7b <unknown>\n#16 0x55e99cb76d31 <unknown>\n#17 0x55e99cb5ec85 <unknown>\n#18 0x55e99cb778a2 <unknown>\n#19 0x55e99cb43e1f <unknown>\n#20 0x55e99cb9ae48 <unknown>\n#21 0x55e99cb9b013 <unknown>\n#22 0x55e99cbaaebc <unknown>\n#23 0x7f37143acac3 <unknown>","statusTrace":"browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"5549ba2e2d16e4767e2d4372708b4b5d\")>\n\n    @allure.severity(severity_level.NORMAL)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Переход на страницу по ссылке\")\n    @allure.testcase(\"Задача U1, U2\")\n    @allure.story(\"Переход по ссылке проходит успешно, основные элементы новой страницы отображаются корректно\")\n    @allure.title(\"Переход по меню на другие страницы\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверка перехода по меню на другие страницы\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть домашнюю страницу\n            2. Навести курсор на вкладку меню \"Video Tutorial\"\n            3. Кликнуть пункт \"Spring Boot\"\n            4. Проверить переход на страницу\n            5. Проверить значение \"TITLE\"\n            6. Проверить корректность отображения элементов страницы\n    \n        Ожидаемый результат:\n            - Происходит переход на страницу\n            - Значение \"TITLE\" соответствует странице\n            - Элементы, уникальные для этой страницы, активны\"\"\")\n    @pytest.mark.xfail\n    def test_redirect_to_video_tutorial_spring(browser: fixture):\n        menu = Menu(browser)\n        menu.open_homepage()\n>       menu.hover_over_video_tutorial()\n\ntests/test_menu_redirect.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:84: in hover_over_video_tutorial\n    self.hover_over_element(MenuLocators.video_tutorial)\npages/base_page.py:82: in hover_over_element\n    actions.move_to_element(element).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd275d7a240>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55e99cb9b013 \\\\u003Cunknown>\\\\n#22 0x55e99cbaaebc \\\\u003Cunknown>\\\\n#23 0x7f37143acac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x55e99cbac0ca <unknown>\nE       #1 0x55e99c8782b0 <unknown>\nE       #2 0x55e99c860380 <unknown>\nE       #3 0x55e99c86006d <unknown>\nE       #4 0x55e99c85e078 <unknown>\nE       #5 0x55e99c85e87f <unknown>\nE       #6 0x55e99c86e29b <unknown>\nE       #7 0x55e99c884674 <unknown>\nE       #8 0x55e99c889bab <unknown>\nE       #9 0x55e99c85ef8e <unknown>\nE       #10 0x55e99c8844cf <unknown>\nE       #11 0x55e99c90b08b <unknown>\nE       #12 0x55e99c8ec6a3 <unknown>\nE       #13 0x55e99c8ba4f3 <unknown>\nE       #14 0x55e99c8bb4fe <unknown>\nE       #15 0x55e99cb72d7b <unknown>\nE       #16 0x55e99cb76d31 <unknown>\nE       #17 0x55e99cb5ec85 <unknown>\nE       #18 0x55e99cb778a2 <unknown>\nE       #19 0x55e99cb43e1f <unknown>\nE       #20 0x55e99cb9ae48 <unknown>\nE       #21 0x55e99cb9b013 <unknown>\nE       #22 0x55e99cbaaebc <unknown>\nE       #23 0x7f37143acac3 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: TimeoutException","steps":[{"name":"Открыть домашнюю страницу","time":{"start":1744979634299,"stop":1744979637299,"duration":3000},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Навести курсор на вкладку меню \"Video Tutorial\"","time":{"start":1744979637299,"stop":1744979937770,"duration":300471},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x55e99cbac0ca <unknown>\n#1 0x55e99c8782b0 <unknown>\n#2 0x55e99c860380 <unknown>\n#3 0x55e99c86006d <unknown>\n#4 0x55e99c85e078 <unknown>\n#5 0x55e99c85e87f <unknown>\n#6 0x55e99c86e29b <unknown>\n#7 0x55e99c884674 <unknown>\n#8 0x55e99c889bab <unknown>\n#9 0x55e99c85ef8e <unknown>\n#10 0x55e99c8844cf <unknown>\n#11 0x55e99c90b08b <unknown>\n#12 0x55e99c8ec6a3 <unknown>\n#13 0x55e99c8ba4f3 <unknown>\n#14 0x55e99c8bb4fe <unknown>\n#15 0x55e99cb72d7b <unknown>\n#16 0x55e99cb76d31 <unknown>\n#17 0x55e99cb5ec85 <unknown>\n#18 0x55e99cb778a2 <unknown>\n#19 0x55e99cb43e1f <unknown>\n#20 0x55e99cb9ae48 <unknown>\n#21 0x55e99cb9b013 <unknown>\n#22 0x55e99cbaaebc <unknown>\n#23 0x7f37143acac3 <unknown>\n\n","statusTrace":"  File \"/ui_tests/pages/home_page.py\", line 84, in hover_over_video_tutorial\n    self.hover_over_element(MenuLocators.video_tutorial)\n  File \"/ui_tests/pages/base_page.py\", line 82, in hover_over_element\n    actions.move_to_element(element).perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1744979937797,"stop":1744979937849,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Smoke тест"},{"name":"feature","value":"Переход на страницу по ссылке"},{"name":"story","value":"Переход по ссылке проходит успешно, основные элементы новой страницы отображаются корректно"},{"name":"severity","value":"normal"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_menu_redirect"},{"name":"host","value":"e06ed94265e2"},{"name":"thread","value":"20-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_menu_redirect"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Задача U1, U2","url":"Задача U1, U2","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"881a9bccef8b56cb.json","parameterValues":[]}